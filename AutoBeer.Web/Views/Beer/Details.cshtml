@model AutoBeer.Data.Classes.Beer

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Beer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Style)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Style)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Brewed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Brewed)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Bottled)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Bottled)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TotalBottles)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TotalBottles)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RemainingBottles)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RemainingBottles)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BatchSizeLiters)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BatchSizeLiters)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BitternessUnits)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BitternessUnits)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Color)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Color)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OriginalGravityPlatoMeasured)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OriginalGravityPlatoMeasured)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OriginalGravityMeasured)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OriginalGravityMeasured)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FinalGravityMeasured)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FinalGravityMeasured)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OriginalGravityPlato)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OriginalGravityPlato)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OriginalGravity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OriginalGravity)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FinalGravity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FinalGravity)
        </dd>
        @if (Model.AlcoholMeasured != 0.00)
        {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AlcoholMeasured)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AlcoholMeasured)
        </dd>
        }
        @if (Model.Alcohol != 0.00)
        {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Alcohol)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Alcohol)
        </dd>
        }
    </dl>

    @if (Model.Measurements != null)
        {
    <table>
        <tr>
            <th>@Html.DisplayNameFor(measure => measure.Measurements.First().BeerName)</th>
            <th>@Html.DisplayNameFor(measure => measure.Measurements.First().Timestamp)</th>
            <th>@Html.DisplayNameFor(measure => measure.Measurements.First().TiltColor)</th>
            <th>@Html.DisplayNameFor(measure => measure.Measurements.First().SpecificGravity)</th>
            <th>@Html.DisplayNameFor(measure => measure.Measurements.First().TemperatureFahrenheit)</th>
            <th>@Html.DisplayNameFor(measure => measure.Measurements.First().TemperatureCelsius)</th>
            <th>@Html.DisplayNameFor(measure => measure.Measurements.First().Comment)</th>
        </tr>
        @foreach (var measure in Model.Measurements)
            {
    <tr>
        <td>@Html.DisplayFor(mea => measure.BeerName)</td>
        <td>@Html.DisplayFor(mea => measure.Timestamp)</td>
        <td>@Html.DisplayFor(mea => measure.TiltColor)</td>
        <td>@Html.DisplayFor(mea => measure.SpecificGravity)</td>
        <td>@Html.DisplayFor(mea => measure.TemperatureFahrenheit)</td>
        <td>@Html.DisplayFor(mea => measure.TemperatureCelsius)</td>
        <td>@Html.DisplayFor(mea => measure.Comment)</td>
    </tr>
            }
    </table>
        }
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
